(function() {
    var type_impls = Object.fromEntries([["qdrant_client",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-QdrantConfig\" class=\"impl\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#19\">Source</a><a href=\"#impl-Clone-for-QdrantConfig\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"qdrant_client/config/struct.QdrantConfig.html\" title=\"struct qdrant_client::config::QdrantConfig\">QdrantConfig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#19\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"qdrant_client/config/struct.QdrantConfig.html\" title=\"struct qdrant_client::config::QdrantConfig\">QdrantConfig</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","qdrant_client::qdrant_client::QdrantBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-QdrantConfig\" class=\"impl\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#186-198\">Source</a><a href=\"#impl-Default-for-QdrantConfig\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"qdrant_client/config/struct.QdrantConfig.html\" title=\"struct qdrant_client::config::QdrantConfig\">QdrantConfig</a></h3><div class=\"docblock\"><p>Default Qdrant client configuration.</p>\n</div></section></summary><div class=\"docblock\"><p>Connects to <code>http://localhost:6334</code> without an API key.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#187-197\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","qdrant_client::qdrant_client::QdrantBuilder"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QdrantConfig\" class=\"impl\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#43-181\">Source</a><a href=\"#impl-QdrantConfig\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"qdrant_client/config/struct.QdrantConfig.html\" title=\"struct qdrant_client::config::QdrantConfig\">QdrantConfig</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_url\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#52-57\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.from_url\" class=\"fn\">from_url</a>(url: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Start configuring a Qdrant client with an URL</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>client = QdrantConfig::from_url(<span class=\"string\">\"http://localhost:6334\"</span>).build();</code></pre></div>\n<p>This is normally done through <a href=\"qdrant_client/struct.Qdrant.html#method.from_url\" title=\"associated function qdrant_client::Qdrant::from_url\"><code>Qdrant::from_url</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.api_key\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#83-86\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.api_key\" class=\"fn\">api_key</a>(self, api_key: impl <a class=\"trait\" href=\"qdrant_client/config/trait.AsOptionApiKey.html\" title=\"trait qdrant_client::config::AsOptionApiKey\">AsOptionApiKey</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Set an optional API key</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<p>A typical use case might be getting the key from an environment variable:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>qdrant_client::Qdrant;\n\n<span class=\"kw\">let </span>client = Qdrant::from_url(<span class=\"string\">\"http://localhost:6334\"</span>)\n    .api_key(std::env::var(<span class=\"string\">\"QDRANT_API_KEY\"</span>))\n    .build();</code></pre></div>\n<p>Or you might get it from some configuration:</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>client = Qdrant::from_url(<span class=\"string\">\"http://localhost:6334\"</span>)\n    .api_key(config.get(<span class=\"string\">\"api_key\"</span>))\n    .build();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.keep_alive_while_idle\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#89-92\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.keep_alive_while_idle\" class=\"fn\">keep_alive_while_idle</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Keep the connection alive while idle</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timeout\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#103-106\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.timeout\" class=\"fn\">timeout</a>(self, timeout: impl <a class=\"trait\" href=\"qdrant_client/config/trait.AsTimeout.html\" title=\"trait qdrant_client::config::AsTimeout\">AsTimeout</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Set the timeout for this client</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>qdrant_client::Qdrant;\n\n<span class=\"kw\">let </span>client = Qdrant::from_url(<span class=\"string\">\"http://localhost:6334\"</span>)\n    .timeout(std::time::Duration::from_secs(<span class=\"number\">10</span>))\n    .build();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.connect_timeout\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#117-120\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.connect_timeout\" class=\"fn\">connect_timeout</a>(self, timeout: impl <a class=\"trait\" href=\"qdrant_client/config/trait.AsTimeout.html\" title=\"trait qdrant_client::config::AsTimeout\">AsTimeout</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Set the connect timeout for this client</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>qdrant_client::Qdrant;\n\n<span class=\"kw\">let </span>client = Qdrant::from_url(<span class=\"string\">\"http://localhost:6334\"</span>)\n    .connect_timeout(std::time::Duration::from_secs(<span class=\"number\">10</span>))\n    .build();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compression\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#132-135\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.compression\" class=\"fn\">compression</a>(self, compression: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"qdrant_client/config/enum.CompressionEncoding.html\" title=\"enum qdrant_client::config::CompressionEncoding\">CompressionEncoding</a>&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Set the compression to use for this client</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>qdrant_client::Qdrant;\n<span class=\"kw\">use </span>qdrant_client::config::CompressionEncoding;\n\n<span class=\"kw\">let </span>client = Qdrant::from_url(<span class=\"string\">\"http://localhost:6334\"</span>)\n    .compression(<span class=\"prelude-val\">Some</span>(CompressionEncoding::Gzip))\n    .build();</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_api_key\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#140-142\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.set_api_key\" class=\"fn\">set_api_key</a>(&amp;mut self, api_key: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.str.html\">str</a>)</h4></section></summary><div class=\"docblock\"><p>Set an API key</p>\n<p>Also see <a href=\"qdrant_client/config/struct.QdrantConfig.html#method.api_key\" title=\"method qdrant_client::config::QdrantConfig::api_key\"><code>api_key()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_timeout\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#147-149\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.set_timeout\" class=\"fn\">set_timeout</a>(&amp;mut self, timeout: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>)</h4></section></summary><div class=\"docblock\"><p>Set the timeout for this client</p>\n<p>Also see <a href=\"qdrant_client/config/struct.QdrantConfig.html#method.timeout\" title=\"method qdrant_client::config::QdrantConfig::timeout\"><code>timeout()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_connect_timeout\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#154-156\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.set_connect_timeout\" class=\"fn\">set_connect_timeout</a>(&amp;mut self, connect_timeout: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>)</h4></section></summary><div class=\"docblock\"><p>Set the connection timeout for this client</p>\n<p>Also see <a href=\"qdrant_client/config/struct.QdrantConfig.html#method.connect_timeout\" title=\"method qdrant_client::config::QdrantConfig::connect_timeout\"><code>connect_timeout()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_keep_alive_while_idle\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#161-163\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.set_keep_alive_while_idle\" class=\"fn\">set_keep_alive_while_idle</a>(&amp;mut self, keep_alive_while_idle: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Set whether to keep the connection alive when idle</p>\n<p>Also see <a href=\"qdrant_client/config/struct.QdrantConfig.html#method.keep_alive_while_idle\" title=\"method qdrant_client::config::QdrantConfig::keep_alive_while_idle\"><code>keep_alive_while_idle()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_compression\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#168-170\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.set_compression\" class=\"fn\">set_compression</a>(&amp;mut self, compression: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"qdrant_client/config/enum.CompressionEncoding.html\" title=\"enum qdrant_client::config::CompressionEncoding\">CompressionEncoding</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Set the compression to use for this client</p>\n<p>Also see <a href=\"qdrant_client/config/struct.QdrantConfig.html#method.compression\" title=\"method qdrant_client::config::QdrantConfig::compression\"><code>compression()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#173-175\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.build\" class=\"fn\">build</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"qdrant_client/struct.Qdrant.html\" title=\"struct qdrant_client::Qdrant\">Qdrant</a>, <a class=\"enum\" href=\"qdrant_client/enum.QdrantError.html\" title=\"enum qdrant_client::QdrantError\">QdrantError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Build the configured <a href=\"qdrant_client/struct.Qdrant.html\" title=\"struct qdrant_client::Qdrant\"><code>Qdrant</code></a> client</p>\n</div></details><section id=\"method.skip_compatibility_check\" class=\"method\"><a class=\"src rightside\" href=\"src/qdrant_client/qdrant_client/config.rs.html#177-180\">Source</a><h4 class=\"code-header\">pub fn <a href=\"qdrant_client/config/struct.QdrantConfig.html#tymethod.skip_compatibility_check\" class=\"fn\">skip_compatibility_check</a>(self) -&gt; Self</h4></section></div></details>",0,"qdrant_client::qdrant_client::QdrantBuilder"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[16158]}